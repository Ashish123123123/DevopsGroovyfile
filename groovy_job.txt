job("website_code_pull") {
description ("Pulling website code")
  scm{
    github('Ashish123123123/task6devopsAL.git','master')
  }
  triggers {
        githubPush()
    }
}


job("launching_website") {
description ("Launching website on the top of k8s")
  triggers {
        upstream('website_code_pull', 'SUCCESS')
    }
   steps {
        shell('''#!/bin/bash -xe
cp -rvf /root/.jenkins/workspace/website_code_pull/* .
if ls | grep .html
then
if kubectl get deployment | awk '{print $1}' | grep htmlwebsite
then
kubectl delete all --all
kubectl delete pvc --all
sleep 10 
fi 
kubectl delete pvc --all 
kubectl create -f httpdeply.yml
sleep 5
export html=$(ls | grep .html)
export htmlpod=$(kubectl get pods | grep htmlwebsite | awk '{print$1}')
sleep 4
kubectl cp $(echo $html) $(echo $htmlpod):/usr/local/apache2/htdocs/
 
elif ls | grep .php
then
if kubectl get deployment | awk '{print $1}' | grep phpwebsite 
then
kubectl delete all --all
kubectl delete pvc --all
sleep 10
fi
kubectl delete pvc --all 
kubectl create -f phpdeploy.yml
sleep 5
export php=$(ls | grep .php)
export phpod=$(kubectl get pods | grep phpwebsite | awk '{print$1}') 
sleep 4
kubectl cp $(echo $php) $(echo $phpod):/var/www/html/
else 
echo "Nothing found" 
fi''')
    }
}


job("Relaunching_fail_website") {
description ("It will test if pod is running else send a mail")

  triggers {
        upstream('launching_website', 'SUCCESS')
    }
steps {
        shell('''#!/bin/bash -xe
cp -rvf /root/.jenkins/workspace/website_code_pull/* .
export html=$(kubectl get deployment | grep htmlwebsite | awk '{print$1}')
if [[ "$html" == "htmlwebsite" ]]
then 
export status=$(curl -sL -w "%{http_code}" -I "http://192.168.99.104:30052" -o /dev/null)
else
export status=$(curl -sL -w "%{http_code}" -I "http://192.168.99.104:30053" -o /dev/null)
fi 

if [[ $status == 200 ]]
then 
echo "website working good"
else 
echo "sending alert email to developer site is not working"
python3 mail.py
sleep 10
if [[ "$html" == "htmlwebsite" ]]
then
kubectl apply -f httpdeply.yaml
else
kubectl apply -f phpdeploy.yaml
fi
fi 
''')
    }
}


buildPipelineView('Buildpipelines-Task6') {
    title('Task6-build')
    displayedBuilds(3)
    selectedJob('website_code_pull')
    showPipelineParameters(true)
    refreshFrequency(2)
}
